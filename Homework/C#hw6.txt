## C# Programming Homework 06

1.What is an exception?
* An exception is a problem that arises during the execution of a program.

2.What happens in a try block if the program executes without errors?
* They all run, one after the other, to completion

3.How does the catch mechanism work for unhandled exceptions?
* A catch handler is intended to capture and handle a specific type of exception.

4.What happens in a program if an exception block fails to handle an particular error?
* The method immediately exits and execution returns to the calling method.

5.What is the parent class for all exceptions? How does this work?
* The Exception class is the base class for all predefined system exception.

6.How do you determine the type of an error?
* Use the property method.

7.What is the purpose of integer checking?
* To check for an OverFlowException

8.What is the range of values than a signed Int32 type can contain? State the lowest value and the
highest value.
* The range is -2,147,483,648 to 2,147,483,647

9.What is the range of values than an unsigned Int32 type can contain? State the lowest value and the
highest value. What is the difference between a signed integer and an unsigned integer? Can signed
integers and unsigned integers represent the same amount of numbers?
* The range for an unsinged int32 is 0 to 4,294,967,295, the difference between an unsigned interger and a signed integer is
unsigned int is an integer that can not be negative and thus has a higher range of positive values that it can assume. A signed 
int is an integer that can be negative but has a lower positive range in exchange for more negative values it can assume.

10.What does the finally block do?
* The finally block will execute when the try/catch block leaves the execution, no matter what condition cause it.

11.(Thought question) When would you not use a finally block in a try/catch construction?
* 